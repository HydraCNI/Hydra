#apiVersion: v1
#kind: Namespace
#metadata:
#  labels:
#    k8s-app: flannel
#    pod-security.kubernetes.io/enforce: privileged
#  name: kube-flannel
#---
#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  labels:
#    k8s-app: flannel
#  name: flannel
#  namespace: kube-flannel
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRole
#metadata:
#  labels:
#    k8s-app: flannel
#  name: flannel
#rules:
#- apiGroups:
#  - ""
#  resources:
#  - pods
#  verbs:
#  - get
#- apiGroups:
#  - ""
#  resources:
#  - nodes
#  verbs:
#  - get
#  - list
#  - watch
#- apiGroups:
#  - ""
#  resources:
#  - nodes/status
#  verbs:
#  - patch
#- apiGroups:
#  - networking.k8s.io
#  resources:
#  - clustercidrs
#  verbs:
#  - list
#  - watch
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRoleBinding
#metadata:
#  labels:
#    k8s-app: flannel
#  name: flannel
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: ClusterRole
#  name: flannel
#subjects:
#- kind: ServiceAccount
#  name: flannel
#  namespace: kube-flannel
---
apiVersion: v1
data:
  cni-conf.json: |
    {
      "name": "dedicated-0.1",
      "cniVersion": "0.3.1",
      "plugins": [
        {
          "type": "flannel",
          "delegate": {
            "hairpinMode": true,
            "isDefaultGateway": true
          }
        },
        {
          "type": "portmap",
          "capabilities": {
            "portMappings": true
          }
        }
      ]
    }
  net-conf.json: |
    {
      "Network": "10.240.0.0/16",
      "Backend": {
        "Type": "vxlan",
        "VNI": 2
      }
    }
kind: ConfigMap
metadata:
  labels:
    app: flannel
    k8s-app: flannel
    tier: node
  name: kube-flannel-cfg-dedicated
  namespace: kube-flannel
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: flannel
    k8s-app: flannel
    tier: node
  name: kube-flannel-ds-dedicated
  namespace: kube-flannel
spec:
  selector:
    matchLabels:
      app: flannel-dedicated
      k8s-app: flannel-dedicated
  template:
    metadata:
      labels:
        app: flannel-dedicated
        k8s-app: flannel-dedicated
        tier: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        command:
        - /bin/bash
        - -c
        - " /opt/bin/flanneld --ip-masq 
        --subnet-file=/run/flannel/hydra-cni/subnet.env 
        --etcd-prefix=/hydra-cni/network 
        --etcd-endpoints=https://$(cat /run/flannel/hydra-cni/etcd.ip):2379 
        --etcd-keyfile=/etc/kubernetes/pki/etcd/server.key 
        --etcd-certfile=/etc/kubernetes/pki/etcd/server.crt 
        --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: EVENT_QUEUE_DEPTH
          value: "5000"
        image: docker.io/flannel/flannel:v0.21.4
        name: kube-flannel
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
        volumeMounts:
        - mountPath: /run/flannel/hydra-cni
          name: run
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
        - mountPath: /etc/kubernetes/pki/etcd/
          name: flannel-cert
        - mountPath: /run/xtables.lock
          name: xtables-lock
      hostNetwork: true
      initContainers:
      - name: busybox
        command: [ "/bin/sh", "-c", "cat /etc/kubernetes/pki/etcd/resolv.conf | tee /etc/resolv.conf ;ip= ;while [ -z $ip ];do ip=$(nslookup kube-etcd.kube-system.svc.cluster.local|awk -F': '  'NR==6 { print $2 } ');done;echo $ip |tee /run/flannel/hydra-cni/etcd.ip"]
        image: busybox
        volumeMounts:
          - mountPath: /run/flannel/hydra-cni
            name: run
          - mountPath: /etc/kubernetes/pki/etcd/
            name: flannel-cert
      - args:
        - -f
        - /flannel
        - /opt/cni/bin/flannel
        command:
        - cp
        image: docker.io/flannel/flannel-cni-plugin:v1.1.2
        name: install-cni-plugin
        volumeMounts:
        - mountPath: /opt/cni/bin
          name: cni-plugin
      - command: [ "/bin/bash","-c","cat /etc/kube-flannel/net-conf.json | etcdctl --endpoints=https://$(cat /run/hydra-cni/flannel/etcd.ip):2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key put /hydra-cni/network/config "]
        image: docker.io/bitnami/etcd:latest
        name: set-cluster-cidr
        volumeMounts:
        - mountPath: /etc/kube-flannel/
          name: flannel-cfg
        - mountPath: /etc/kubernetes/pki/etcd/
          name: flannel-cert
        - mountPath: /run/flannel/hydra-cni
          name: run
      priorityClassName: system-node-critical
      serviceAccountName: flannel
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/flannel/hydra-cni
        name: run
      - hostPath:
          path: /opt/cni/bin
        name: cni-plugin
      - hostPath:
          path: /etc/cni/net.d
        name: cni
      - configMap:
          name: kube-flannel-cfg-dedicated
        name: flannel-cfg
      - configMap:
          name: kube-flannel-etcd-cert-dedicated
        name: flannel-cert
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
